name: Build Notepad Next

on:
  push:
    branches:
      - master
    tags:
      - '*'
  pull_request:


jobs:
  cmake-build:
    strategy:
      fail-fast: false
      matrix:
        config:
        -
          qt_version: "6.3.2"
          modules: "qt5compat"
          os: ubuntu-20.04
        -
          qt_version: "6.3.2"
          modules: "qt5compat"
          os: windows-latest
        -
          qt_version: "6.3.1"
          modules: "qt5compat"
          os: macos-latest

    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.config.qt_version }}
          modules: ${{ matrix.config.modules }}

      # disable meanwhile, until I understand how to fix the install prefix with ninja
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Setup (Linux)
        if: startsWith (matrix.config.os, 'ubuntu')
        run: sudo apt-get install libxkbcommon-dev

      - name: Setup VS tools (Windows)
        if: startsWith (matrix.config.os, 'windows')
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Compile
        run: |
          cmake -S . -B cbuild -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=OFF -DBUILD_STATIC=ON
          cmake --build cbuild

      - name: Create App Image
        if: startsWith (matrix.config.os, 'ubuntu')
        run: |
            cmake --install cbuild --prefix=${{ github.workspace }}/cbuild/AppDir/usr/
            cd cbuild

            wget --no-verbose "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
            wget --no-verbose "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
            chmod +x linuxdeploy*.AppImage

            export OUTPUT=NotepadNext-x86_64.AppImage
            export LD_LIBRARY_PATH=AppDir/usr/lib/:$LD_LIBRARY_PATH
            export DEBUG=1
            ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage

      - name: Upload AppImage
        if: startsWith (matrix.config.os, 'ubuntu')
        uses: actions/upload-artifact@v2
        with:
          name: NotepadNext-Linux-Qt${{ matrix.config.qt_version }}-cmake-AppImage
          path: ${{ github.workspace }}/cbuild/NotepadNext-x86_64.AppImage

  build-linux:
    strategy:
      fail-fast: false
      matrix:
        config:
        - 
          qt_version: "5.15.2"
          modules: ""
          os: ubuntu-18.04
        - 
          qt_version: "6.2.4"
          modules: "qt5compat"
          os: ubuntu-latest

    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.config.qt_version }}
          modules: ${{ matrix.config.modules }}
      
      - name: Setup
        run: sudo apt-get install libxkbcommon-dev fuse

      - name: Compile
        run: |
          rm -rf build-linux
          mkdir build-linux 
          cd build-linux
          qmake ../src/NotepadNext.pro "DISTRIBUTION=AppImage"
          make -j$(nproc)

      - name: Build AppImage
        run: |
          cd build-linux
          make install INSTALL_ROOT=AppDir
          cd NotepadNext
          wget --no-verbose "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
          wget --no-verbose "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
          chmod +x linuxdeploy*.AppImage
          export OUTPUT=NotepadNext-x86_64.AppImage
          ./linuxdeploy-x86_64.AppImage --appdir AppDir --plugin qt --output appimage

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: NotepadNext-Linux-Qt${{ matrix.config.qt_version }}-AppImage
          path: ${{ github.workspace }}/build-linux/NotepadNext/NotepadNext-x86_64.AppImage

  build-mac:
    strategy:
      fail-fast: false
      matrix:
        config:
        -
          qt_version: "5.15.2"
          modules: ""
        -
          qt_version: "6.2.4"
          modules: "qt5compat"

    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.config.qt_version }}
          modules: ${{ matrix.config.modules }}

      - name: Compile
        run: |
          rm -rf build-mac
          mkdir build-mac
          cd build-mac
          qmake ../src/NotepadNext.pro
          make -j$(sysctl -n hw.ncpu)
          cd NotepadNext
          macdeployqt NotepadNext.app -dmg

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: NotepadNext-macOS-Qt${{ matrix.config.qt_version }}
          path: ${{ github.workspace }}/build-mac/NotepadNext/NotepadNext.dmg

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        config:
        - 
          qt_version: "5.15.2"
          modules: ""
        - 
          qt_version: "6.2.4"
          modules: "qt5compat"

    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.config.qt_version }}
          modules: ${{ matrix.config.modules }}

      - name: Setup Visual Studio Tools
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install jom
        run: choco install jom

      - name: Run QMake
        run: |
          mkdir build
          cd build
          qmake ..\src\NotepadNext.pro

      - name: Build
        run: |
          cd build
          jom

      - name: Create zip Package
        run: |
          cd build
          jom package

      - name: Create Installer
        if: matrix.config.qt_version == '5.15.2'
        run: |
          cd build
          jom installer

      - name: Upload zip Package
        uses: actions/upload-artifact@v3
        with:
          name: NotepadNext-Windows-Qt${{ matrix.config.qt_version }}-Zip
          path: ${{ github.workspace }}/build/package/

      - name: Upload Installer
        if: matrix.config.qt_version == '5.15.2'
        uses: actions/upload-artifact@v3
        with:
          name: NotepadNext-Windows-Qt${{ matrix.config.qt_version }}-Installer
          path: ${{ github.workspace }}/installer/NotepadNext*.exe

  github:
    name: Draft GitHub Release
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]

    if: github.repository == 'dail8859/NotepadNext' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Create Draft Release
        run: |
          gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --generate-notes --draft

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Upload Windows Installer
        run: |
          gh release upload ${{ github.ref_name }} NotepadNext-Windows-Qt5.15.2-Installer/NotepadNext-${{ github.ref_name }}-Installer.exe

      # The artifact is unzipped, so need to zip it back up so it can be uploaded
      - name: Upload Windows Zip
        run: |
          cd NotepadNext-Windows-Qt5.15.2-Zip/
          zip -r ../NotepadNext-${{ github.ref_name }}.zip .
          cd ..
          gh release upload ${{ github.ref_name }} NotepadNext-${{ github.ref_name }}.zip

      - name: Upload Linux AppImage
        run: |
          gh release upload ${{ github.ref_name }} NotepadNext-Linux-Qt5.15.2-AppImage/NotepadNext-x86_64.AppImage

      - name: Upload macOS App
        run: |
          gh release upload ${{ github.ref_name }} NotepadNext-macOS-Qt5.15.2/NotepadNext.dmg

